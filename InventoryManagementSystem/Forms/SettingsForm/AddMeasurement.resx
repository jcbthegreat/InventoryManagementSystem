<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>